name: Gradle build

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/gradle.yml'
      - 'images/**'
      - 'LICENSE'
      - 'README.md'
      - 'dev.otel.properties'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/gradle.yml'
      - 'images/**'
      - 'LICENSE'
      - 'README.md'
      - 'dev.otel.properties'

jobs:
  build-common:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2 # v5.0.0

      - name: Build
        run: ./gradlew :common:build


  build-mod:
    needs:
      - build-common
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        project: [ "neoforge", "fabric" ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2 # v5.0.0

      - name: Accept EULA
        run: |
          mkdir -p ${{matrix.project}}/gameTestRun
          cat <<EOF > ${{matrix.project}}/gameTestRun/eula.txt
          #By changing the setting below to TRUE you are indicating your agreement to our EULA (https://aka.ms/MinecraftEULA).
          #Fri Oct 31 15:37:45 CET 2025
          eula=true
          EOF

      - name: Check
        id: check
        run: ./gradlew :${{matrix.project}}:check
      - name: Upload GameTest logs
        uses: actions/upload-artifact@v4
        if: ${{ success() || (failure() && steps.check.outcome == 'failure') }}
        with:
          name: ${{matrix.project}}-gametest-logs
          path: |
            ${{matrix.project}}/gameTestRun/logs/latest.log
            ${{matrix.project}}/gameTestRun/logs/debug.log
          if-no-files-found: error
      - name: Upload GameTest world
        uses: actions/upload-artifact@v4
        if: ${{ failure() && steps.check.outcome == 'failure' }}
        with:
          name: ${{matrix.project}}-gametest-world
          path: |
            ${{matrix.project}}/gameTestRun/world/
          retention-days: 3
          if-no-files-found: error

      - name: Build
        id: build
        if: ${{startsWith(github.ref_name, 'release/') || (github.ref_name == 'release')}}
        run: ./gradlew :${{matrix.project}}:build -x :${{matrix.project}}:check
      - name: Upload Build result
        if: ${{success() && (steps.build.outcome == 'success')}} # don't run if build did not run
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.project}}-build
          path: |
            ${{matrix.project}}/build/libs/
          retention-days: 1
          if-no-files-found: error
